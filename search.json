[
  {
    "objectID": "basic-example.html",
    "href": "basic-example.html",
    "title": "Habbit",
    "section": "",
    "text": "(tab content) 1\n\n\n\n(tab content) 2\n\nlibrary(tidyverse)\nggplot(mpg) +\n  geom_boxplot(aes(x = class, y = hwy))"
  },
  {
    "objectID": "basic-example.html#section-x",
    "href": "basic-example.html#section-x",
    "title": "Habbit",
    "section": "0.2 Section X",
    "text": "0.2 Section X\nThis is my introduction.\n\nx <- 1\nprint(x)\n\n[1] 1"
  },
  {
    "objectID": "basic-example.html#section-1.1",
    "href": "basic-example.html#section-1.1",
    "title": "Habbit",
    "section": "1.1 Section 1.1",
    "text": "1.1 Section 1.1\nDrink water"
  },
  {
    "objectID": "basic-example.html#section-1.2",
    "href": "basic-example.html#section-1.2",
    "title": "Habbit",
    "section": "1.2 Section 1.2",
    "text": "1.2 Section 1.2\nSleep again"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html",
    "href": "DANL310_midterm-spring-2023-a.html",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "",
    "text": "library(knitr)\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(socviz)\nlibrary(ggthemes)\nlibrary(hrbrthemes)\nlibrary(gapminder)\nlibrary(stargazer)\n\n\nI use theme_set(theme_ipsum() + theme(strip.background =element_rect(fill=\"lightgray\"))) in the setup R code chunk with the include = FALSE option"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1a",
    "href": "DANL310_midterm-spring-2023-a.html#q1a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1a",
    "text": "Q1a\n\nReplicate the following ggplot.\n\nUse the color #0072B2 for dots.\n\n\n\n# Set the data and filter to include only observations from 2007 and exclude Oceania\nggplot(data = filter(gapminder, year == 2007,\n                     continent != 'Oceania'),\n\n       # Set the aesthetics (x-axis and y-axis) to life expectancy and reorder countries by life expectancy\n       aes(x = lifeExp,\n           y = fct_reorder(country, lifeExp))) +\n\n  # Add a layer of points to the plot, setting the color to blue and size to 1.75\n  geom_point(color = \"#0072B2\", size = 1.75) +\n\n  # Add a layer of text labels to the plot, setting the label to life expectancy, hjust to -.25, and size to 2\n  geom_text(aes(label = lifeExp), hjust = -.25,\n            size = 2) +\n\n  # Facet the plot by continent, with y-scales free\n  facet_wrap(.~continent, scales = \"free_y\") +\n\n  # Set the x-axis label to NULL (no name) and limit the x-axis to 35-90\n  scale_x_continuous(\n    name = NULL,\n    lim = c(35, 90)\n  ) +\n\n  # Set the y-axis label to NULL (no name)\n  scale_y_discrete(name = NULL) +\n\n  # Add a title to the plot\n  labs(title = 'Life expectancy in 2007') +\n\n  # Set the theme to minimal\n  theme_minimal() +\n\n  # Customize theme elements: set the y-axis text size, the plot title size and position, and the facet strip text size and font face\n  theme(\n    axis.text.y = element_text(size = rel(.75)),\n    plot.title = element_text(size = rel(1.5),\n                              hjust = 0.5,\n                              face = 'bold'),\n    strip.text = element_text(size = rel(1.25),\n                              face = 'bold')\n  )"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q1b",
    "href": "DANL310_midterm-spring-2023-a.html#q1b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q1b",
    "text": "Q1b\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2a",
    "href": "DANL310_midterm-spring-2023-a.html#q2a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2a",
    "text": "Q2a\n\nReplicate the following ggplot.\n\nThe following describes the type values:\n\nn_ot_us: Number of US tweets\nn_ot_wrld: Number of worldwide tweets\nn_rt_lk_us: Number of US retweets & likes\nn_rt_lk_wrld: Number of worldwide retweets & likes\n\nUse the colors, maroon and #428bca properly.\n\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_ot_us\" or \"n_ot_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_ot_us\" with \"US\" and \"n_ot_wrld\" with \"Worldwide\".\nn_tweets_long1 <- n_tweets_long %>% \n  filter(type %in% c(\"n_ot_us\", \"n_ot_wrld\") ) %>% \n  mutate(type = ifelse(type == \"n_ot_us\", \"US\", \"Worldwide\"))\n\n\n# The following line filters the rows of the n_tweets_long data frame that have a value of \"n_rt_lk_us\" or \"n_rt_lk_wrld\" in the \"type\" column. \n# It then creates a new column called \"type\" that replaces \"n_rt_lk_us\" with \"US\" and \"n_rt_lk_wrld\" with \"Worldwide\".\nn_tweets_long2 <- n_tweets_long %>% \n  filter(type %in% c(\"n_rt_lk_us\", \"n_rt_lk_wrld\") ) %>% \n  mutate(type = ifelse(type == \"n_rt_lk_us\", \"US\", \"Worldwide\"))\n  \n\n\np2 <- ggplot(mapping = aes(x = year, y = n)) +  # Create a ggplot object with the mapping of the x-axis to the \"year\" variable and y-axis to the \"n\" variable\n  geom_col(n_tweets_long1,  # Add a column chart layer with the \"n_tweets_long1\" data\n           mapping = aes(fill = type),  # Map the \"type\" variable to the fill aesthetic of the chart\n           position = 'dodge', alpha = .67) +  # Set the position of the columns to \"dodge\" and the transparency to 0.67\n  geom_line(n_tweets_long2,  # Add a line chart layer with the \"n_tweets_long2\" data\n            mapping = aes(color = type),  # Map the \"type\" variable to the color aesthetic of the chart\n            size = 1.5) +  # Set the line size to 1.5\n  geom_point(data = n_tweets_long2,  # Add a point chart layer with the \"n_tweets_long2\" data\n             size = 2,  # Set the point size to 2\n             color = 'black')  +  # Set the point color to black\n  scale_x_continuous(breaks = seq(2012, 2017, 1)) +  # Set the x-axis breaks to the sequence from 2012 to 2017 with an interval of 1\n  scale_y_continuous(label = scales::comma) +  # Format the y-axis labels using the comma function from the scales package\n  scale_color_manual(values = c('maroon', '#428bca')) +  # Manually set the color values for the color aesthetic\n  scale_fill_manual(values = c('maroon', '#428bca')) +   # Manually set the color values for the fill aesthetic\n  guides(fill = guide_legend(reverse = TRUE,  # Customize the fill legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 1),\n         color = guide_legend(reverse = TRUE,  # Customize the color legend guide by reversing the order of the legend, positioning the labels at the bottom, and setting the number of rows to 2 and the key width to 2\n                             # title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 2,\n                             nrow = 2,\n                             order = 2)) +\n  labs(x = \"Year\",  # Add x-axis label \"Year\"\n       y = \"Number of Tweets, Retweets & Likes\\n (in thousand)\",  # Add y-axis label \"Number of Tweets, Retweets & Likes (in thousand)\"\n       fill = \"Tweets\",  # Add fill legend label \"Tweets\"\n       color = \"Retweets and likes\",  # Add color legend label \"Retweets and likes\"\n       caption = 'Source: Choe, \"Social Media Campaigns, Lobbying, and Climate Change Legislation:\\n Evidence from #climatechange/#globalwarming and Energy Lobbies\" (2023)') +  # Add caption with source information\n  theme_ipsum() +  # Use the 'theme_ipsum' theme from the 'ggthemes' package\n  theme(\n  axis.title.y = element_text(\n    size = rel(1.5),\n    margin = margin(t = 0, r = 20, b = 0, l = 0) # set the margin for the y axis title\n  ),\n  axis.title.x = element_text(\n    size = rel(1.5),\n    margin = margin(t = 10, r = 0, b = 0, l = 0) # set the margin for the x axis title\n  ),\n  axis.text.x = element_text(\n    size = rel(1.25) # set the font size for the x axis tick labels\n  ),\n  axis.text.y = element_text(\n    size = rel(1.25) # set the font size for the y axis tick labels\n  ),\n  legend.position = 'top', # set the position of the legend\n  legend.title = element_text(\n    size = rel(1),\n    face = 'bold',\n    hjust = .5 # set the font size, face and horizontal justification for the legend title\n  ),\n  legend.text = element_text(\n    size = rel(1) # set the font size for the legend text\n  ),\n  legend.spacing.x = unit(1.25, \"cm\"), # set the horizontal spacing between legend items\n  plot.caption = element_text(\n    size = rel(1.25),\n    hjust = .5 # set the font size and horizontal justification for the plot caption\n  )\n)\n\n\np2"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q2b.",
    "href": "DANL310_midterm-spring-2023-a.html#q2b.",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q2b.",
    "text": "Q2b.\n\nMake a simple comment on the visualization result.\n\nAny comment that is not made up is okay."
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3a",
    "href": "DANL310_midterm-spring-2023-a.html#q3a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3a",
    "text": "Q3a\n\nReplicate the following ggplot.\n\nYou should calculate the proportion of Pit Bull (or Mix) for each zip code.\nYou should join data.frames properly.\nChoose the color palette from the viridis scales https://ggplot2.tidyverse.org/reference/scale_viridis.html.\nUse coord_map(projection = \"albers\", lat0 = 39, lat1 = 45).\n\n\n\n# Joining two data frames using a common variable\nnyc_zips_df <- nyc_zips_df %>% \n  left_join(nyc_zips_coord)\n\n# Creating a data frame of the top 5 dog breeds by count\nnyc_dogs <- nyc_dog_license %>%\n  group_by(breed_rc) %>% \n  summarise(N = n()) %>% \n  filter(dense_rank(-N)<=5)\n\n# Creating a data frame of dog breed frequency and percentage by zip code for the top 5 breeds\nnyc_fb <- nyc_dog_license %>%\n  group_by(zip_code, breed_rc) %>%\n  summarize(n = n()) %>%\n  mutate(freq = n / sum(n),\n         pct = round(freq*100, 2)) %>%\n  filter(breed_rc %in% nyc_dogs$breed_rc )\n\n\n# theme_nymap <- function(base_size=9, base_family=\"\") {\n#   require(grid)\n#   theme_bw(base_size=base_size, base_family=base_family) %+replace%\n#     theme(axis.line=element_blank(),\n#           axis.text=element_blank(),\n#           axis.ticks=element_blank(),\n#           axis.title=element_blank(),\n#           panel.background=element_blank(),\n#           panel.border=element_blank(),\n#           panel.grid=element_blank(),\n#           panel.spacing=unit(0, \"lines\"),\n#           plot.background=element_blank(),\n#     )\n# }\n\n\n# Create a map of New York City zip codes colored by the share of Pit Bull dogs \n# and their mixes out of all licensed dogs, based on licensing data\nfb_map <- nyc_zips_df %>% \n  left_join(nyc_fb)\n\n# Filter for Pit Bull breeds and plot the map\nfilter(fb_map, breed_rc %in% c('Pit Bull (or Mix)')) %>% \n  ggplot(mapping = aes(x = X, y = Y, \n                       fill = pct,\n                       group = zip_code)) +\n  geom_polygon(color = \"gray80\", \n               size = 0.1) +    # draw the zip code polygons\n  scale_fill_viridis_c(option = \"inferno\",\n                       breaks = seq(0,24,2)) +  # set the color scale for Pit Bull share\n  labs(fill = \"Pit Bull's Share of All Licensed Dogs (%)\",\n       title = \"New York City's Pit Bull\",\n       subtitle = \"By Zip Code. Based on Licensing Data\") +  # set the map title and legend title\n  theme_map() +  # set the map theme\n  theme(legend.justification = c(.5,.5),\n        legend.position = 'top',\n        legend.direction = \"horizontal\",\n        legend.text = element_text(size= rel(1.25)),\n        legend.title = element_text(size= rel(1.25),\n                                face = 'bold',\n                                hjust = .5),\n        plot.title = element_text(hjust = .5,\n                                  vjust = .5,\n                                  face = 'bold',\n                                  size = rel(2.25)),\n        plot.subtitle = element_text(hjust = .5,\n                                     vjust = .5,\n                                     size = rel(1.25))) +  # customize the theme of the plot\n  coord_map(projection = \"albers\", lat0 = 39, lat1 = 45) +  # set the map projection\n  guides(fill = guide_legend(title.position = \"top\",\n                             label.position = \"bottom\",\n                             keywidth = 1, nrow = 1))  # set the legend position"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q3b",
    "href": "DANL310_midterm-spring-2023-a.html#q3b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q3b",
    "text": "Q3b\n\nWhich zip_code does have the highest proportion of Pit Bull (or Mix)?\n\n\nq3b <- fb_map %>% \n  select(zip_code, breed_rc, pct) %>% \n  filter(breed_rc == 'Pit Bull (or Mix)') %>% \n  arrange(-pct) %>% \n  distinct()"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4a",
    "href": "DANL310_midterm-spring-2023-a.html#q4a",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4a",
    "text": "Q4a\n\nReplicate the following ggplot.\n\n\n# Create a new variable year extracted from the Date column\nstock <- stock %>% \n  mutate(year = year(Date))\n\np <- ggplot(data = filter(stock, year >= 2019, year <= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year, scales = 'free' ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")"
  },
  {
    "objectID": "DANL310_midterm-spring-2023-a.html#q4b",
    "href": "DANL310_midterm-spring-2023-a.html#q4b",
    "title": "DANL 310: Data Visualization and Presentation Midterm Exam Example Answers",
    "section": "Q4b",
    "text": "Q4b\n\nIn 2020, which company’s stock trading Volume does seem to be the most insensitive to a change in Close price?\n\n\n# Create a new variable year extracted from the Date column\nstock <- stock %>% \n  mutate(year = year(Date))\n\np <- ggplot(data = filter(stock, year >= 2019, year <= 2022 ) , \n            aes(x = log(Volume), y = log(Close), color = company))\n\np + \n  geom_point(alpha = .05) +\n  geom_smooth(method = lm, color = 'black') +\n  facet_grid( company ~ year ) +\n  labs(x = 'Volume (in log)',\n       y = 'Close (in log)') +\n  guides(color = \"none\")\n\n\n\n\n\nIn 2020, TSLA’s trading Volume seems to be the most insensitive to a change in Close price.\nThe reason is that for a one unit increase in log(Price), the least amount of log(Volume) changes for TSLA.\n\n\nreg <- lm(log(Volume) ~ log(Close) * company,\n          data = filter(stock, year == 2020))\nreg_sum <- tidy(reg, conf.int = T) %>% \n  filter(str_detect(term, \"log\"), term != \"log(Close)\")\n\nggplot(reg_sum,\n       aes(x = estimate, y = term,\n           xmin = conf.low, \n           xmax = conf.high)) +\n  geom_point() +\n  geom_pointrange() +\n  geom_vline(xintercept = 0, color = 'red', lty = 2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Your Name",
    "section": "",
    "text": "I am a student at State University of New York at Geneseo.\nI am interested in …\nI enjoy …"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Your Name",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo, 2023 - B.A./B.S. in YOUR MAJOR - YOUR MINOR"
  },
  {
    "objectID": "table.html",
    "href": "table.html",
    "title": "Untitled",
    "section": "",
    "text": "kable(\n  iris,\n  col.names = c('We', 'Need', 'Five', 'Names', 'Here')\n) \n\n\n\n \n  \n    We \n    Need \n    Five \n    Names \n    Here \n  \n \n\n  \n    5.1 \n    3.5 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.0 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.7 \n    3.2 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    4.6 \n    3.1 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.6 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    5.4 \n    3.9 \n    1.7 \n    0.4 \n    setosa \n  \n  \n    4.6 \n    3.4 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.0 \n    3.4 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    4.4 \n    2.9 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.1 \n    1.5 \n    0.1 \n    setosa \n  \n  \n    5.4 \n    3.7 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.4 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.0 \n    1.4 \n    0.1 \n    setosa \n  \n  \n    4.3 \n    3.0 \n    1.1 \n    0.1 \n    setosa \n  \n  \n    5.8 \n    4.0 \n    1.2 \n    0.2 \n    setosa \n  \n  \n    5.7 \n    4.4 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    5.4 \n    3.9 \n    1.3 \n    0.4 \n    setosa \n  \n  \n    5.1 \n    3.5 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.7 \n    3.8 \n    1.7 \n    0.3 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.5 \n    0.3 \n    setosa \n  \n  \n    5.4 \n    3.4 \n    1.7 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.7 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    4.6 \n    3.6 \n    1.0 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.3 \n    1.7 \n    0.5 \n    setosa \n  \n  \n    4.8 \n    3.4 \n    1.9 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.0 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.4 \n    1.6 \n    0.4 \n    setosa \n  \n  \n    5.2 \n    3.5 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.2 \n    3.4 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.7 \n    3.2 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.1 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    5.4 \n    3.4 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    5.2 \n    4.1 \n    1.5 \n    0.1 \n    setosa \n  \n  \n    5.5 \n    4.2 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.1 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.2 \n    1.2 \n    0.2 \n    setosa \n  \n  \n    5.5 \n    3.5 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.6 \n    1.4 \n    0.1 \n    setosa \n  \n  \n    4.4 \n    3.0 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.4 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.5 \n    1.3 \n    0.3 \n    setosa \n  \n  \n    4.5 \n    2.3 \n    1.3 \n    0.3 \n    setosa \n  \n  \n    4.4 \n    3.2 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.5 \n    1.6 \n    0.6 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.9 \n    0.4 \n    setosa \n  \n  \n    4.8 \n    3.0 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.6 \n    3.2 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    5.3 \n    3.7 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.3 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    7.0 \n    3.2 \n    4.7 \n    1.4 \n    versicolor \n  \n  \n    6.4 \n    3.2 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    6.9 \n    3.1 \n    4.9 \n    1.5 \n    versicolor \n  \n  \n    5.5 \n    2.3 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    6.5 \n    2.8 \n    4.6 \n    1.5 \n    versicolor \n  \n  \n    5.7 \n    2.8 \n    4.5 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    3.3 \n    4.7 \n    1.6 \n    versicolor \n  \n  \n    4.9 \n    2.4 \n    3.3 \n    1.0 \n    versicolor \n  \n  \n    6.6 \n    2.9 \n    4.6 \n    1.3 \n    versicolor \n  \n  \n    5.2 \n    2.7 \n    3.9 \n    1.4 \n    versicolor \n  \n  \n    5.0 \n    2.0 \n    3.5 \n    1.0 \n    versicolor \n  \n  \n    5.9 \n    3.0 \n    4.2 \n    1.5 \n    versicolor \n  \n  \n    6.0 \n    2.2 \n    4.0 \n    1.0 \n    versicolor \n  \n  \n    6.1 \n    2.9 \n    4.7 \n    1.4 \n    versicolor \n  \n  \n    5.6 \n    2.9 \n    3.6 \n    1.3 \n    versicolor \n  \n  \n    6.7 \n    3.1 \n    4.4 \n    1.4 \n    versicolor \n  \n  \n    5.6 \n    3.0 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.8 \n    2.7 \n    4.1 \n    1.0 \n    versicolor \n  \n  \n    6.2 \n    2.2 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.6 \n    2.5 \n    3.9 \n    1.1 \n    versicolor \n  \n  \n    5.9 \n    3.2 \n    4.8 \n    1.8 \n    versicolor \n  \n  \n    6.1 \n    2.8 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    2.5 \n    4.9 \n    1.5 \n    versicolor \n  \n  \n    6.1 \n    2.8 \n    4.7 \n    1.2 \n    versicolor \n  \n  \n    6.4 \n    2.9 \n    4.3 \n    1.3 \n    versicolor \n  \n  \n    6.6 \n    3.0 \n    4.4 \n    1.4 \n    versicolor \n  \n  \n    6.8 \n    2.8 \n    4.8 \n    1.4 \n    versicolor \n  \n  \n    6.7 \n    3.0 \n    5.0 \n    1.7 \n    versicolor \n  \n  \n    6.0 \n    2.9 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.7 \n    2.6 \n    3.5 \n    1.0 \n    versicolor \n  \n  \n    5.5 \n    2.4 \n    3.8 \n    1.1 \n    versicolor \n  \n  \n    5.5 \n    2.4 \n    3.7 \n    1.0 \n    versicolor \n  \n  \n    5.8 \n    2.7 \n    3.9 \n    1.2 \n    versicolor \n  \n  \n    6.0 \n    2.7 \n    5.1 \n    1.6 \n    versicolor \n  \n  \n    5.4 \n    3.0 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    6.0 \n    3.4 \n    4.5 \n    1.6 \n    versicolor \n  \n  \n    6.7 \n    3.1 \n    4.7 \n    1.5 \n    versicolor \n  \n  \n    6.3 \n    2.3 \n    4.4 \n    1.3 \n    versicolor \n  \n  \n    5.6 \n    3.0 \n    4.1 \n    1.3 \n    versicolor \n  \n  \n    5.5 \n    2.5 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    5.5 \n    2.6 \n    4.4 \n    1.2 \n    versicolor \n  \n  \n    6.1 \n    3.0 \n    4.6 \n    1.4 \n    versicolor \n  \n  \n    5.8 \n    2.6 \n    4.0 \n    1.2 \n    versicolor \n  \n  \n    5.0 \n    2.3 \n    3.3 \n    1.0 \n    versicolor \n  \n  \n    5.6 \n    2.7 \n    4.2 \n    1.3 \n    versicolor \n  \n  \n    5.7 \n    3.0 \n    4.2 \n    1.2 \n    versicolor \n  \n  \n    5.7 \n    2.9 \n    4.2 \n    1.3 \n    versicolor \n  \n  \n    6.2 \n    2.9 \n    4.3 \n    1.3 \n    versicolor \n  \n  \n    5.1 \n    2.5 \n    3.0 \n    1.1 \n    versicolor \n  \n  \n    5.7 \n    2.8 \n    4.1 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    3.3 \n    6.0 \n    2.5 \n    virginica \n  \n  \n    5.8 \n    2.7 \n    5.1 \n    1.9 \n    virginica \n  \n  \n    7.1 \n    3.0 \n    5.9 \n    2.1 \n    virginica \n  \n  \n    6.3 \n    2.9 \n    5.6 \n    1.8 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.8 \n    2.2 \n    virginica \n  \n  \n    7.6 \n    3.0 \n    6.6 \n    2.1 \n    virginica \n  \n  \n    4.9 \n    2.5 \n    4.5 \n    1.7 \n    virginica \n  \n  \n    7.3 \n    2.9 \n    6.3 \n    1.8 \n    virginica \n  \n  \n    6.7 \n    2.5 \n    5.8 \n    1.8 \n    virginica \n  \n  \n    7.2 \n    3.6 \n    6.1 \n    2.5 \n    virginica \n  \n  \n    6.5 \n    3.2 \n    5.1 \n    2.0 \n    virginica \n  \n  \n    6.4 \n    2.7 \n    5.3 \n    1.9 \n    virginica \n  \n  \n    6.8 \n    3.0 \n    5.5 \n    2.1 \n    virginica \n  \n  \n    5.7 \n    2.5 \n    5.0 \n    2.0 \n    virginica \n  \n  \n    5.8 \n    2.8 \n    5.1 \n    2.4 \n    virginica \n  \n  \n    6.4 \n    3.2 \n    5.3 \n    2.3 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.5 \n    1.8 \n    virginica \n  \n  \n    7.7 \n    3.8 \n    6.7 \n    2.2 \n    virginica \n  \n  \n    7.7 \n    2.6 \n    6.9 \n    2.3 \n    virginica \n  \n  \n    6.0 \n    2.2 \n    5.0 \n    1.5 \n    virginica \n  \n  \n    6.9 \n    3.2 \n    5.7 \n    2.3 \n    virginica \n  \n  \n    5.6 \n    2.8 \n    4.9 \n    2.0 \n    virginica \n  \n  \n    7.7 \n    2.8 \n    6.7 \n    2.0 \n    virginica \n  \n  \n    6.3 \n    2.7 \n    4.9 \n    1.8 \n    virginica \n  \n  \n    6.7 \n    3.3 \n    5.7 \n    2.1 \n    virginica \n  \n  \n    7.2 \n    3.2 \n    6.0 \n    1.8 \n    virginica \n  \n  \n    6.2 \n    2.8 \n    4.8 \n    1.8 \n    virginica \n  \n  \n    6.1 \n    3.0 \n    4.9 \n    1.8 \n    virginica \n  \n  \n    6.4 \n    2.8 \n    5.6 \n    2.1 \n    virginica \n  \n  \n    7.2 \n    3.0 \n    5.8 \n    1.6 \n    virginica \n  \n  \n    7.4 \n    2.8 \n    6.1 \n    1.9 \n    virginica \n  \n  \n    7.9 \n    3.8 \n    6.4 \n    2.0 \n    virginica \n  \n  \n    6.4 \n    2.8 \n    5.6 \n    2.2 \n    virginica \n  \n  \n    6.3 \n    2.8 \n    5.1 \n    1.5 \n    virginica \n  \n  \n    6.1 \n    2.6 \n    5.6 \n    1.4 \n    virginica \n  \n  \n    7.7 \n    3.0 \n    6.1 \n    2.3 \n    virginica \n  \n  \n    6.3 \n    3.4 \n    5.6 \n    2.4 \n    virginica \n  \n  \n    6.4 \n    3.1 \n    5.5 \n    1.8 \n    virginica \n  \n  \n    6.0 \n    3.0 \n    4.8 \n    1.8 \n    virginica \n  \n  \n    6.9 \n    3.1 \n    5.4 \n    2.1 \n    virginica \n  \n  \n    6.7 \n    3.1 \n    5.6 \n    2.4 \n    virginica \n  \n  \n    6.9 \n    3.1 \n    5.1 \n    2.3 \n    virginica \n  \n  \n    5.8 \n    2.7 \n    5.1 \n    1.9 \n    virginica \n  \n  \n    6.8 \n    3.2 \n    5.9 \n    2.3 \n    virginica \n  \n  \n    6.7 \n    3.3 \n    5.7 \n    2.5 \n    virginica \n  \n  \n    6.7 \n    3.0 \n    5.2 \n    2.3 \n    virginica \n  \n  \n    6.3 \n    2.5 \n    5.0 \n    1.9 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.2 \n    2.0 \n    virginica \n  \n  \n    6.2 \n    3.4 \n    5.4 \n    2.3 \n    virginica \n  \n  \n    5.9 \n    3.0 \n    5.1 \n    1.8 \n    virginica \n  \n\n\n\n\n\n\nknitr::kable(iris, align = \"lccrr\")\n\n\n\n \n  \n    Sepal.Length \n    Sepal.Width \n    Petal.Length \n    Petal.Width \n    Species \n  \n \n\n  \n    5.1 \n    3.5 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.0 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.7 \n    3.2 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    4.6 \n    3.1 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.6 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    5.4 \n    3.9 \n    1.7 \n    0.4 \n    setosa \n  \n  \n    4.6 \n    3.4 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.0 \n    3.4 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    4.4 \n    2.9 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.1 \n    1.5 \n    0.1 \n    setosa \n  \n  \n    5.4 \n    3.7 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.4 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.0 \n    1.4 \n    0.1 \n    setosa \n  \n  \n    4.3 \n    3.0 \n    1.1 \n    0.1 \n    setosa \n  \n  \n    5.8 \n    4.0 \n    1.2 \n    0.2 \n    setosa \n  \n  \n    5.7 \n    4.4 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    5.4 \n    3.9 \n    1.3 \n    0.4 \n    setosa \n  \n  \n    5.1 \n    3.5 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.7 \n    3.8 \n    1.7 \n    0.3 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.5 \n    0.3 \n    setosa \n  \n  \n    5.4 \n    3.4 \n    1.7 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.7 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    4.6 \n    3.6 \n    1.0 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.3 \n    1.7 \n    0.5 \n    setosa \n  \n  \n    4.8 \n    3.4 \n    1.9 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.0 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.4 \n    1.6 \n    0.4 \n    setosa \n  \n  \n    5.2 \n    3.5 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.2 \n    3.4 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.7 \n    3.2 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.8 \n    3.1 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    5.4 \n    3.4 \n    1.5 \n    0.4 \n    setosa \n  \n  \n    5.2 \n    4.1 \n    1.5 \n    0.1 \n    setosa \n  \n  \n    5.5 \n    4.2 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.1 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.2 \n    1.2 \n    0.2 \n    setosa \n  \n  \n    5.5 \n    3.5 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    4.9 \n    3.6 \n    1.4 \n    0.1 \n    setosa \n  \n  \n    4.4 \n    3.0 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    5.1 \n    3.4 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.5 \n    1.3 \n    0.3 \n    setosa \n  \n  \n    4.5 \n    2.3 \n    1.3 \n    0.3 \n    setosa \n  \n  \n    4.4 \n    3.2 \n    1.3 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.5 \n    1.6 \n    0.6 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.9 \n    0.4 \n    setosa \n  \n  \n    4.8 \n    3.0 \n    1.4 \n    0.3 \n    setosa \n  \n  \n    5.1 \n    3.8 \n    1.6 \n    0.2 \n    setosa \n  \n  \n    4.6 \n    3.2 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    5.3 \n    3.7 \n    1.5 \n    0.2 \n    setosa \n  \n  \n    5.0 \n    3.3 \n    1.4 \n    0.2 \n    setosa \n  \n  \n    7.0 \n    3.2 \n    4.7 \n    1.4 \n    versicolor \n  \n  \n    6.4 \n    3.2 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    6.9 \n    3.1 \n    4.9 \n    1.5 \n    versicolor \n  \n  \n    5.5 \n    2.3 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    6.5 \n    2.8 \n    4.6 \n    1.5 \n    versicolor \n  \n  \n    5.7 \n    2.8 \n    4.5 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    3.3 \n    4.7 \n    1.6 \n    versicolor \n  \n  \n    4.9 \n    2.4 \n    3.3 \n    1.0 \n    versicolor \n  \n  \n    6.6 \n    2.9 \n    4.6 \n    1.3 \n    versicolor \n  \n  \n    5.2 \n    2.7 \n    3.9 \n    1.4 \n    versicolor \n  \n  \n    5.0 \n    2.0 \n    3.5 \n    1.0 \n    versicolor \n  \n  \n    5.9 \n    3.0 \n    4.2 \n    1.5 \n    versicolor \n  \n  \n    6.0 \n    2.2 \n    4.0 \n    1.0 \n    versicolor \n  \n  \n    6.1 \n    2.9 \n    4.7 \n    1.4 \n    versicolor \n  \n  \n    5.6 \n    2.9 \n    3.6 \n    1.3 \n    versicolor \n  \n  \n    6.7 \n    3.1 \n    4.4 \n    1.4 \n    versicolor \n  \n  \n    5.6 \n    3.0 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.8 \n    2.7 \n    4.1 \n    1.0 \n    versicolor \n  \n  \n    6.2 \n    2.2 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.6 \n    2.5 \n    3.9 \n    1.1 \n    versicolor \n  \n  \n    5.9 \n    3.2 \n    4.8 \n    1.8 \n    versicolor \n  \n  \n    6.1 \n    2.8 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    2.5 \n    4.9 \n    1.5 \n    versicolor \n  \n  \n    6.1 \n    2.8 \n    4.7 \n    1.2 \n    versicolor \n  \n  \n    6.4 \n    2.9 \n    4.3 \n    1.3 \n    versicolor \n  \n  \n    6.6 \n    3.0 \n    4.4 \n    1.4 \n    versicolor \n  \n  \n    6.8 \n    2.8 \n    4.8 \n    1.4 \n    versicolor \n  \n  \n    6.7 \n    3.0 \n    5.0 \n    1.7 \n    versicolor \n  \n  \n    6.0 \n    2.9 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    5.7 \n    2.6 \n    3.5 \n    1.0 \n    versicolor \n  \n  \n    5.5 \n    2.4 \n    3.8 \n    1.1 \n    versicolor \n  \n  \n    5.5 \n    2.4 \n    3.7 \n    1.0 \n    versicolor \n  \n  \n    5.8 \n    2.7 \n    3.9 \n    1.2 \n    versicolor \n  \n  \n    6.0 \n    2.7 \n    5.1 \n    1.6 \n    versicolor \n  \n  \n    5.4 \n    3.0 \n    4.5 \n    1.5 \n    versicolor \n  \n  \n    6.0 \n    3.4 \n    4.5 \n    1.6 \n    versicolor \n  \n  \n    6.7 \n    3.1 \n    4.7 \n    1.5 \n    versicolor \n  \n  \n    6.3 \n    2.3 \n    4.4 \n    1.3 \n    versicolor \n  \n  \n    5.6 \n    3.0 \n    4.1 \n    1.3 \n    versicolor \n  \n  \n    5.5 \n    2.5 \n    4.0 \n    1.3 \n    versicolor \n  \n  \n    5.5 \n    2.6 \n    4.4 \n    1.2 \n    versicolor \n  \n  \n    6.1 \n    3.0 \n    4.6 \n    1.4 \n    versicolor \n  \n  \n    5.8 \n    2.6 \n    4.0 \n    1.2 \n    versicolor \n  \n  \n    5.0 \n    2.3 \n    3.3 \n    1.0 \n    versicolor \n  \n  \n    5.6 \n    2.7 \n    4.2 \n    1.3 \n    versicolor \n  \n  \n    5.7 \n    3.0 \n    4.2 \n    1.2 \n    versicolor \n  \n  \n    5.7 \n    2.9 \n    4.2 \n    1.3 \n    versicolor \n  \n  \n    6.2 \n    2.9 \n    4.3 \n    1.3 \n    versicolor \n  \n  \n    5.1 \n    2.5 \n    3.0 \n    1.1 \n    versicolor \n  \n  \n    5.7 \n    2.8 \n    4.1 \n    1.3 \n    versicolor \n  \n  \n    6.3 \n    3.3 \n    6.0 \n    2.5 \n    virginica \n  \n  \n    5.8 \n    2.7 \n    5.1 \n    1.9 \n    virginica \n  \n  \n    7.1 \n    3.0 \n    5.9 \n    2.1 \n    virginica \n  \n  \n    6.3 \n    2.9 \n    5.6 \n    1.8 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.8 \n    2.2 \n    virginica \n  \n  \n    7.6 \n    3.0 \n    6.6 \n    2.1 \n    virginica \n  \n  \n    4.9 \n    2.5 \n    4.5 \n    1.7 \n    virginica \n  \n  \n    7.3 \n    2.9 \n    6.3 \n    1.8 \n    virginica \n  \n  \n    6.7 \n    2.5 \n    5.8 \n    1.8 \n    virginica \n  \n  \n    7.2 \n    3.6 \n    6.1 \n    2.5 \n    virginica \n  \n  \n    6.5 \n    3.2 \n    5.1 \n    2.0 \n    virginica \n  \n  \n    6.4 \n    2.7 \n    5.3 \n    1.9 \n    virginica \n  \n  \n    6.8 \n    3.0 \n    5.5 \n    2.1 \n    virginica \n  \n  \n    5.7 \n    2.5 \n    5.0 \n    2.0 \n    virginica \n  \n  \n    5.8 \n    2.8 \n    5.1 \n    2.4 \n    virginica \n  \n  \n    6.4 \n    3.2 \n    5.3 \n    2.3 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.5 \n    1.8 \n    virginica \n  \n  \n    7.7 \n    3.8 \n    6.7 \n    2.2 \n    virginica \n  \n  \n    7.7 \n    2.6 \n    6.9 \n    2.3 \n    virginica \n  \n  \n    6.0 \n    2.2 \n    5.0 \n    1.5 \n    virginica \n  \n  \n    6.9 \n    3.2 \n    5.7 \n    2.3 \n    virginica \n  \n  \n    5.6 \n    2.8 \n    4.9 \n    2.0 \n    virginica \n  \n  \n    7.7 \n    2.8 \n    6.7 \n    2.0 \n    virginica \n  \n  \n    6.3 \n    2.7 \n    4.9 \n    1.8 \n    virginica \n  \n  \n    6.7 \n    3.3 \n    5.7 \n    2.1 \n    virginica \n  \n  \n    7.2 \n    3.2 \n    6.0 \n    1.8 \n    virginica \n  \n  \n    6.2 \n    2.8 \n    4.8 \n    1.8 \n    virginica \n  \n  \n    6.1 \n    3.0 \n    4.9 \n    1.8 \n    virginica \n  \n  \n    6.4 \n    2.8 \n    5.6 \n    2.1 \n    virginica \n  \n  \n    7.2 \n    3.0 \n    5.8 \n    1.6 \n    virginica \n  \n  \n    7.4 \n    2.8 \n    6.1 \n    1.9 \n    virginica \n  \n  \n    7.9 \n    3.8 \n    6.4 \n    2.0 \n    virginica \n  \n  \n    6.4 \n    2.8 \n    5.6 \n    2.2 \n    virginica \n  \n  \n    6.3 \n    2.8 \n    5.1 \n    1.5 \n    virginica \n  \n  \n    6.1 \n    2.6 \n    5.6 \n    1.4 \n    virginica \n  \n  \n    7.7 \n    3.0 \n    6.1 \n    2.3 \n    virginica \n  \n  \n    6.3 \n    3.4 \n    5.6 \n    2.4 \n    virginica \n  \n  \n    6.4 \n    3.1 \n    5.5 \n    1.8 \n    virginica \n  \n  \n    6.0 \n    3.0 \n    4.8 \n    1.8 \n    virginica \n  \n  \n    6.9 \n    3.1 \n    5.4 \n    2.1 \n    virginica \n  \n  \n    6.7 \n    3.1 \n    5.6 \n    2.4 \n    virginica \n  \n  \n    6.9 \n    3.1 \n    5.1 \n    2.3 \n    virginica \n  \n  \n    5.8 \n    2.7 \n    5.1 \n    1.9 \n    virginica \n  \n  \n    6.8 \n    3.2 \n    5.9 \n    2.3 \n    virginica \n  \n  \n    6.7 \n    3.3 \n    5.7 \n    2.5 \n    virginica \n  \n  \n    6.7 \n    3.0 \n    5.2 \n    2.3 \n    virginica \n  \n  \n    6.3 \n    2.5 \n    5.0 \n    1.9 \n    virginica \n  \n  \n    6.5 \n    3.0 \n    5.2 \n    2.0 \n    virginica \n  \n  \n    6.2 \n    3.4 \n    5.4 \n    2.3 \n    virginica \n  \n  \n    5.9 \n    3.0 \n    5.1 \n    1.8 \n    virginica \n  \n\n\n\n\n\n\nd <- cbind(X1 = runif(3), X2 = 10^c(3, 5, 7), X3 = rnorm(3,\n  0, 1000))\n# at most 4 decimal places\nknitr::kable(d, digits = 4)\n\n\n\n \n  \n    X1 \n    X2 \n    X3 \n  \n \n\n  \n    0.6415 \n    1e+03 \n    450.4169 \n  \n  \n    0.1695 \n    1e+05 \n    1867.8499 \n  \n  \n    0.8791 \n    1e+07 \n    856.1396 \n  \n\n\n\n\n\n\nknitr::kable(d, digits = 3, \n             format.args = list(scientific = FALSE))\n\n\n\n \n  \n    X1 \n    X2 \n    X3 \n  \n \n\n  \n    0.641 \n    1000 \n    450.417 \n  \n  \n    0.169 \n    100000 \n    1867.850 \n  \n  \n    0.879 \n    10000000 \n    856.140"
  }
]